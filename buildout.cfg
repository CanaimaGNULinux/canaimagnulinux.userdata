[buildout]
extends =
    https://raw.github.com/collective/buildout.plonetest/master/test-4.3.x.cfg
    https://raw.github.com/collective/buildout.plonetest/master/qa.cfg
    https://raw.github.com/plone/plone.app.robotframework/master/versions.cfg
    versions-4.3.x.cfg

show-picked-versions = true

package-name = canaimagnulinux.userdata
package-extras = [test]
#package-min-coverage = 89
test-eggs = Pillow

eggs +=
    Products.PDBDebugMode
    Products.PrintingMailHost
    aws.zope2zcmldoc
    iw.debug
    plone.app.debugtoolbar
    plone.reload

parts +=
    instance-sitecustomize
    checkversions
    createcoverage
    dependencychecker
    i18ndude
    omelette
    rebuild_i18n-sh
    robot
    coverage-sh
    coverage
    report

[instance]
zcml += 
    iw.debug
environment-vars =
    ENABLE_PRINTING_MAILHOST True
    PTS_LANGUAGES en es
    zope_i18n_allowed_languages en es
    zope_i18n_compile_mo_files true

[instance-sitecustomize]
recipe = collective.recipe.template
output = ${buildout:bin-directory}/sitecustomize.py
mode = 600
input = inline:
   import sys
   sys.setdefaultencoding('utf-8')

[checkversions]
recipe = zc.recipe.egg
eggs = z3c.checkversions [buildout]

[dependencychecker]
recipe = zc.recipe.egg
eggs = z3c.dependencychecker

[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude

[omelette]
recipe = collective.recipe.omelette
eggs = ${test:eggs}

[code-analysis]
directory = ${buildout:directory}/canaimagnulinux/userdata
pre-commit-hook = True
flake8-ignore = E501
clean-lines = True
deprecated-aliases = True
imports = True
flake8-extensions =
#    flake8-blind-except
    flake8-coding
    flake8-debugger
    flake8-quotes
#    pep8-naming
    flake8-plone-api

[coverage]
recipe = zc.recipe.egg
eggs = coverage
initialization =
    include = '--source=${buildout:directory}/canaimagnulinux'
    sys.argv = sys.argv[:] + ['run', include, 'bin/test', '--all']

[report]
recipe = zc.recipe.egg
eggs = coverage
scripts = coverage=report
initialization =
    sys.argv = sys.argv[:] + ['html', '-i']

[robot]
recipe = zc.recipe.egg
eggs =
    ${test:eggs}
    plone.app.robotframework
scripts =
    robot-server
    robot

[versions]
# use latest version of setuptools
setuptools =
